name: CI Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  lint:
    name: Run Lint-Staged
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run Lint-Staged
        run: npx lint-staged

  jest:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci

      - name: Check for Jest Test Files
        run: |
          if [ -z "$(find ./src -type f -name '*.test.*')" ]; then
            echo "No Jest test files found. Skipping Jest tests and build.";
            exit 0;
          else
            echo "Jest test files found. Proceeding with build.";
          fi

      - name: Build Application
        if: success() && steps.check-jest.outputs.skip != 'true' # Skip if no tests
        run: npm run build --verbose

      - name: Run Jest
        if: success() && steps.check-jest.outputs.skip != 'true' # Skip if no tests
        run: npm test --verbose

  cypress:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci

      - name: Check for Cypress Test Files
        id: check-cypress
        run: |
          if [ -z "$(find ./cypress/e2e -type f -name '*.cy.*')" ]; then
            echo "No Cypress test files found. Skipping Cypress tests and build.";
            exit 0;
          else
            echo "Cypress test files found. Proceeding with build.";
          fi

      - name: Build Application
        if: success() && steps.check-cypress.outputs.skip != 'true' # Skip if no tests
        run: npm run build --verbose

      - name: Start Development Server
        if: success() && steps.check-cypress.outputs.skip != 'true' # Skip if no tests
        run: nohup npm run dev > nohup.out 2>&1 &
        env:
          NODE_ENV: development

      - name: Debug Server Logs
        if: success() && steps.check-cypress.outputs.skip != 'true' # Skip if no tests
        run: cat nohup.out || echo "No server logs found."

      - name: Check Running Processes
        if: success() && steps.check-cypress.outputs.skip != 'true' # Skip if no tests
        run: ps aux | grep node

      - name: Wait for server to start
        if: success() && steps.check-cypress.outputs.skip != 'true' # Skip if no tests
        run: npx wait-on http://localhost:3000 --timeout 120000 --verbose

      - name: Run Cypress
        if: success() && steps.check-cypress.outputs.skip != 'true' # Skip if no tests
        run: npm run cypress:run


  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier Check
        run: npx prettier --check .
